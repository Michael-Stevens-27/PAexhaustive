Multisource_probs <- function(Data_Params, Po_Params)
		{
    ####################################################
    # SINGLE -  SOURCE
		####################################################
		if(Data_Params$n_sources == 1)
		{
		SS_Array_Hits <- array(NA, c(length(Po_Params$Po_Array_Hits[,1,1]), length(Po_Params$Po_Array_Hits[1,,1]), length(Po_Params$Po_Array_Hits[1,1,]) ) )
		SS_Array_Miss <- array(NA, c(length(Po_Params$Po_Array_Miss[,1,1]), length(Po_Params$Po_Array_Miss[1,,1]), length(Po_Params$Po_Array_Miss[1,1,]) ) )

			for(i in 1:length(Po_Params$Po_Array_Hits[,1,1]))
				{
				for(j in 1:length(Po_Params$Po_Array_Hits[1,,1]))
					{
					Hits_Prob <- mapply(dpois, Data_Params$Hits_Only$Hits, Po_Params$Po_Array_Hits[i,j,])
					Miss_Prob <- mapply(dpois, Data_Params$Miss_Only$Hits, Po_Params$Po_Array_Miss[i,j,])
					SS_Array_Hits[i,j,] <- Hits_Prob
					SS_Array_Miss[i,j,] <- Miss_Prob
					}
				}
				SS_Hits <- apply(SS_Array_Hits, c(1,2), prod)
				SS_Miss <- apply(SS_Array_Miss, c(1,2), prod)
				SS_Both <- SS_Hits * SS_Miss
				SS_Hits <- SS_Hits/sum(SS_Hits)
				SS_Miss <- SS_Miss/sum(SS_Miss)
				SS_Both <- SS_Both/sum(SS_Both)
				SS_Prob <- list(SS_Array_Hits = SS_Array_Hits, SS_Array_Miss = SS_Array_Miss, SS_Hits = SS_Hits, SS_Miss = SS_Miss, SS_Both = SS_Both)
				return(SS_Prob)
			}
			####################################################
			# MULTTI - SOURCE
			####################################################
			else{
					Sum_hit_po <- matrix(NA, ncol = length(Data_Params$Hits_Only$Longitude), nrow =length(Data_Params$AP_allocation[,1]))
  				Sum_miss_po <- matrix(NA, ncol = length(Data_Params$Miss_Only$Longitude), nrow =length(Data_Params$AP_allocation[,1]))

  				################################################################################################

					for(i in 1:length(Data_Params$AP_allocation[,1]))
					{
						for(j in 1:length(Data_Params$Hits_Only[,1]))
						{
							Sum_hit_po[i, j]  <- sum(Po_Params$Po_Array_Hits[,,j][Data_Params$AP_allocation[i, 1:Data_Params$n_sources]])

						}
						for(j in 1:length(Data_Params$Miss_Only[,1]))
						{
							Sum_miss_po[i, j]  <- sum(Po_Params$Po_Array_Miss[,,j][Data_Params$AP_allocation[i, 1:Data_Params$n_sources]])
						}
					}

					TS_hit_prob <- c()
  			  TS_miss_prob <- c()

					for(i in 1:length(Data_Params$AP_allocation[,1]))
					{
						TS_hit_prob[i] <- prod(mapply(dpois, Data_Params$Hits_Only$Hits, Sum_hit_po[i,]))
						TS_miss_prob[i] <- prod(mapply(dpois, Data_Params$Miss_Only$Hits, Sum_miss_po[i,]))
					}

					TS_both_prob <- TS_hit_prob*TS_miss_prob
  			TS_probs <- cbind(Data_Params$AP_allocation, TS_hit_prob, TS_miss_prob, TS_both_prob)

				################################################################################################

				final_hits <- c()
				final_miss <- c()
				final_both <- c()

				for(i in 1:length(Data_Params$Grid[,1]))
				{
					a <- apply(TS_probs[,1:Data_Params$n_sources], FUN=function (x) any(x == i), MARGIN=1)
					final_hits[i] <- sum(TS_probs[a, Data_Params$n_sources + 1])
					final_miss[i] <- sum(TS_probs[a, Data_Params$n_sources + 2])
					final_both[i] <- sum(TS_probs[a, Data_Params$n_sources + 3])
				}
				TwoD_Hits <- matrix(final_hits, ncol = length(Data_Params$Anchor_Points_Lat), nrow = length(Data_Params$Anchor_Points_Long))
				TwoD_Miss <- matrix(final_miss, ncol = length(Data_Params$Anchor_Points_Lat), nrow = length(Data_Params$Anchor_Points_Long))
				TwoD_Both <- matrix(final_both, ncol = length(Data_Params$Anchor_Points_Lat), nrow = length(Data_Params$Anchor_Points_Long))

				TwoD_Hits <-  TwoD_Hits/sum(TwoD_Hits)
				TwoD_Miss <-  TwoD_Miss/sum(TwoD_Miss)
				TwoD_Both <-  TwoD_Both/sum(TwoD_Both)
				TwoD_Prob <- list( TwoD_Hits = TwoD_Hits, TwoD_Miss = TwoD_Miss, TwoD_Both = TwoD_Both, TS_probs = TS_probs )
				return(TwoD_Prob)
				}
			}
